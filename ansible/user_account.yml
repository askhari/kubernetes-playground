---

- hosts: localhost
  connection: local
  vars:
    k8s_context: cluster-lain
    k8s_kubeconfig: "~/.kube/config"
    k8s_namespace: "{{ namespace }}"
    k8s_username: "{{ k8s_user }}"
    k8s_server_url: "{{ server_url }}"
    k8s_cluster_name: "cluster-{{ k8s_username }}"

  tasks:
    - name: "Verify we have all required information and variables"
      assert:
        that:
          - k8s_username is defined
          - k8s_namespace is defined
          - k8s_server_url is defined
          - k8s_kubeconfig is defined

    - name: "Create new cluster service account for user {{ k8s_username }}"
      k8s:
        kubeconfig: "{{ k8s_kubeconfig }}"
        context: "{{ k8s_context }}"
        definition: "{{ lookup('template', 'templates/service_account.yml') }}"
        state: "{{ state | default('present') }}"
      register: result_k8s_username

    - name: "Debug {{ k8s_username }} service account"
      debug:
        var: result_k8s_username

    - block:
      - name: "Get kubernetes facts"
        k8s_facts:
          kubeconfig: "{{ k8s_kubeconfig }}"
          context: "{{ k8s_context }}"
          kind: secrets
          namespace: "{{ k8s_namespace }}"
          name: "{{ result_k8s_username.result.secrets[0].name }}"
        register: result_secret
  
      - name: "Debug"
        debug:
          var: result_secret
  
      - name: "Retrieve information to build kubeconfig file"
        set_fact:
          k8s_user_certificate: '{{ result_secret.resources[0].data["ca.crt"] }}'
          k8s_user_token: '{{ result_secret.resources[0].data.token | b64decode }}'
      - name: "Render kubeconfig file for user {{ k8s_username }}"
        template:
          src: "templates/kubeconfig_template.j2"
          dest: "confidential/kubeconfig-{{ k8s_username }}"
          mode: 0644
      when:
        - state is not defined or state != 'absent'

    - name: "Granting admin permissions"
      k8s:
        kubeconfig: "{{ k8s_kubeconfig }}"
        context: "{{ k8s_context }}"
        definition: "{{ lookup('template', 'templates/cluster_admin_rolebinding.yml') }}"
        state: "{{ state | default('present') }}"
      when:
        - is_admin is defined
        - is_admin == 'true'

    - name: "Granting admin permissions"
      k8s:
        kubeconfig: "{{ k8s_kubeconfig }}"
        context: "{{ k8s_context }}"
        definition: "{{ lookup('template', 'templates/namespace_admin_rolebinding.yml') }}"
        state: "{{ state | default('present') }}"
      when:
        - is_admin is not defined


